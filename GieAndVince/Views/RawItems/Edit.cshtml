@model GieAndVince.Models.Db.RawItem

@{
    ViewBag.Title = "Edit";
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
    <h1 class="modal-title" id="myModalLabel" align="center">Edit: @Html.DisplayFor(model => model.RIName)</h1>
</div>
<div class="lh-50">&nbsp;</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="col-md-offset-3">
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.RawID)

        <div class="form-group">
            @Html.LabelFor(model => model.RIName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RIName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RIName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RIDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RIDescription, new List<SelectListItem>
                  {
                     new SelectListItem{ Text = "Pasta", Value = "Pasta"},
                     new SelectListItem{ Text = "Drinks", Value = "Drinks"},
                     new SelectListItem{ Text = "Sandwiches", Value = "Sandwiches"},
                     new SelectListItem{ Text = "Pika Pika", Value = "Pika Pika"},
                     new SelectListItem{ Text = "Dessert", Value = "Dessert"},
                     new SelectListItem{ Text = "Rice Meal", Value = "Rice Meal"}
                  }, "Select Category", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RIDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RIPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RIPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RIPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RIQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RIQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RIQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="lh-50">&nbsp;</div>

        <div class="modal-footer">
            <div class="form-group" >
                <div class="col-md-5">
                    <input type="submit" value="Save" class="btn-gv" />
                </div>
            </div>
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
